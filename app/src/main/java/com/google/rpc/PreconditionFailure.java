// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/rpc/error_details.proto

package com.google.rpc;

/**
 * <pre>
 * Describes what preconditions have failed.
 * For example, if an RPC failed because it required the Terms of Service to be
 * acknowledged, it could list the terms of service violation in the
 * PreconditionFailure message.
 * </pre>
 *
 * Protobuf type {@code google.rpc.PreconditionFailure}
 */
public  final class PreconditionFailure extends
    com.google.protobuf.GeneratedMessageLite<
        PreconditionFailure, PreconditionFailure.Builder> implements
    // @@protoc_insertion_point(message_implements:google.rpc.PreconditionFailure)
    PreconditionFailureOrBuilder {
  private PreconditionFailure() {
    violations_ = emptyProtobufList();
  }
  public interface ViolationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.rpc.PreconditionFailure.Violation)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The type of PreconditionFailure. We recommend using a service-specific
     * enum type to define the supported precondition violation types. For
     * example, "TOS" for "Terms of Service violation".
     * </pre>
     *
     * <code>optional string type = 1;</code>
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type of PreconditionFailure. We recommend using a service-specific
     * enum type to define the supported precondition violation types. For
     * example, "TOS" for "Terms of Service violation".
     * </pre>
     *
     * <code>optional string type = 1;</code>
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * The subject, relative to the type, that failed.
     * For example, "google.com/cloud" relative to the "TOS" type would
     * indicate which terms of service is being referenced.
     * </pre>
     *
     * <code>optional string subject = 2;</code>
     */
    java.lang.String getSubject();
    /**
     * <pre>
     * The subject, relative to the type, that failed.
     * For example, "google.com/cloud" relative to the "TOS" type would
     * indicate which terms of service is being referenced.
     * </pre>
     *
     * <code>optional string subject = 2;</code>
     */
    com.google.protobuf.ByteString
        getSubjectBytes();

    /**
     * <pre>
     * A description of how the precondition failed. Developers can use this
     * description to understand how to fix the failure.
     * For example: "Terms of service not accepted".
     * </pre>
     *
     * <code>optional string description = 3;</code>
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * A description of how the precondition failed. Developers can use this
     * description to understand how to fix the failure.
     * For example: "Terms of service not accepted".
     * </pre>
     *
     * <code>optional string description = 3;</code>
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();
  }
  /**
   * <pre>
   * A message type used to describe a single precondition failure.
   * </pre>
   *
   * Protobuf type {@code google.rpc.PreconditionFailure.Violation}
   */
  public  static final class Violation extends
      com.google.protobuf.GeneratedMessageLite<
          Violation, Violation.Builder> implements
      // @@protoc_insertion_point(message_implements:google.rpc.PreconditionFailure.Violation)
      ViolationOrBuilder {
    private Violation() {
      type_ = "";
      subject_ = "";
      description_ = "";
    }
    public static final int TYPE_FIELD_NUMBER = 1;
    private java.lang.String type_;
    /**
     * <pre>
     * The type of PreconditionFailure. We recommend using a service-specific
     * enum type to define the supported precondition violation types. For
     * example, "TOS" for "Terms of Service violation".
     * </pre>
     *
     * <code>optional string type = 1;</code>
     */
    public java.lang.String getType() {
      return type_;
    }
    /**
     * <pre>
     * The type of PreconditionFailure. We recommend using a service-specific
     * enum type to define the supported precondition violation types. For
     * example, "TOS" for "Terms of Service violation".
     * </pre>
     *
     * <code>optional string type = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(type_);
    }
    /**
     * <pre>
     * The type of PreconditionFailure. We recommend using a service-specific
     * enum type to define the supported precondition violation types. For
     * example, "TOS" for "Terms of Service violation".
     * </pre>
     *
     * <code>optional string type = 1;</code>
     */
    private void setType(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      type_ = value;
    }
    /**
     * <pre>
     * The type of PreconditionFailure. We recommend using a service-specific
     * enum type to define the supported precondition violation types. For
     * example, "TOS" for "Terms of Service violation".
     * </pre>
     *
     * <code>optional string type = 1;</code>
     */
    private void clearType() {
      
      type_ = getDefaultInstance().getType();
    }
    /**
     * <pre>
     * The type of PreconditionFailure. We recommend using a service-specific
     * enum type to define the supported precondition violation types. For
     * example, "TOS" for "Terms of Service violation".
     * </pre>
     *
     * <code>optional string type = 1;</code>
     */
    private void setTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      type_ = value.toStringUtf8();
    }

    public static final int SUBJECT_FIELD_NUMBER = 2;
    private java.lang.String subject_;
    /**
     * <pre>
     * The subject, relative to the type, that failed.
     * For example, "google.com/cloud" relative to the "TOS" type would
     * indicate which terms of service is being referenced.
     * </pre>
     *
     * <code>optional string subject = 2;</code>
     */
    public java.lang.String getSubject() {
      return subject_;
    }
    /**
     * <pre>
     * The subject, relative to the type, that failed.
     * For example, "google.com/cloud" relative to the "TOS" type would
     * indicate which terms of service is being referenced.
     * </pre>
     *
     * <code>optional string subject = 2;</code>
     */
    public com.google.protobuf.ByteString
        getSubjectBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(subject_);
    }
    /**
     * <pre>
     * The subject, relative to the type, that failed.
     * For example, "google.com/cloud" relative to the "TOS" type would
     * indicate which terms of service is being referenced.
     * </pre>
     *
     * <code>optional string subject = 2;</code>
     */
    private void setSubject(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      subject_ = value;
    }
    /**
     * <pre>
     * The subject, relative to the type, that failed.
     * For example, "google.com/cloud" relative to the "TOS" type would
     * indicate which terms of service is being referenced.
     * </pre>
     *
     * <code>optional string subject = 2;</code>
     */
    private void clearSubject() {
      
      subject_ = getDefaultInstance().getSubject();
    }
    /**
     * <pre>
     * The subject, relative to the type, that failed.
     * For example, "google.com/cloud" relative to the "TOS" type would
     * indicate which terms of service is being referenced.
     * </pre>
     *
     * <code>optional string subject = 2;</code>
     */
    private void setSubjectBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      subject_ = value.toStringUtf8();
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 3;
    private java.lang.String description_;
    /**
     * <pre>
     * A description of how the precondition failed. Developers can use this
     * description to understand how to fix the failure.
     * For example: "Terms of service not accepted".
     * </pre>
     *
     * <code>optional string description = 3;</code>
     */
    public java.lang.String getDescription() {
      return description_;
    }
    /**
     * <pre>
     * A description of how the precondition failed. Developers can use this
     * description to understand how to fix the failure.
     * For example: "Terms of service not accepted".
     * </pre>
     *
     * <code>optional string description = 3;</code>
     */
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(description_);
    }
    /**
     * <pre>
     * A description of how the precondition failed. Developers can use this
     * description to understand how to fix the failure.
     * For example: "Terms of service not accepted".
     * </pre>
     *
     * <code>optional string description = 3;</code>
     */
    private void setDescription(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      description_ = value;
    }
    /**
     * <pre>
     * A description of how the precondition failed. Developers can use this
     * description to understand how to fix the failure.
     * For example: "Terms of service not accepted".
     * </pre>
     *
     * <code>optional string description = 3;</code>
     */
    private void clearDescription() {
      
      description_ = getDefaultInstance().getDescription();
    }
    /**
     * <pre>
     * A description of how the precondition failed. Developers can use this
     * description to understand how to fix the failure.
     * For example: "Terms of service not accepted".
     * </pre>
     *
     * <code>optional string description = 3;</code>
     */
    private void setDescriptionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      description_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!type_.isEmpty()) {
        output.writeString(1, getType());
      }
      if (!subject_.isEmpty()) {
        output.writeString(2, getSubject());
      }
      if (!description_.isEmpty()) {
        output.writeString(3, getDescription());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!type_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getType());
      }
      if (!subject_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getSubject());
      }
      if (!description_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getDescription());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.google.rpc.PreconditionFailure.Violation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.rpc.PreconditionFailure.Violation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.rpc.PreconditionFailure.Violation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.rpc.PreconditionFailure.Violation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.rpc.PreconditionFailure.Violation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.rpc.PreconditionFailure.Violation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.rpc.PreconditionFailure.Violation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.rpc.PreconditionFailure.Violation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.rpc.PreconditionFailure.Violation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.rpc.PreconditionFailure.Violation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.rpc.PreconditionFailure.Violation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * A message type used to describe a single precondition failure.
     * </pre>
     *
     * Protobuf type {@code google.rpc.PreconditionFailure.Violation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.rpc.PreconditionFailure.Violation, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.rpc.PreconditionFailure.Violation)
        com.google.rpc.PreconditionFailure.ViolationOrBuilder {
      // Construct using com.google.rpc.PreconditionFailure.Violation.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The type of PreconditionFailure. We recommend using a service-specific
       * enum type to define the supported precondition violation types. For
       * example, "TOS" for "Terms of Service violation".
       * </pre>
       *
       * <code>optional string type = 1;</code>
       */
      public java.lang.String getType() {
        return instance.getType();
      }
      /**
       * <pre>
       * The type of PreconditionFailure. We recommend using a service-specific
       * enum type to define the supported precondition violation types. For
       * example, "TOS" for "Terms of Service violation".
       * </pre>
       *
       * <code>optional string type = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        return instance.getTypeBytes();
      }
      /**
       * <pre>
       * The type of PreconditionFailure. We recommend using a service-specific
       * enum type to define the supported precondition violation types. For
       * example, "TOS" for "Terms of Service violation".
       * </pre>
       *
       * <code>optional string type = 1;</code>
       */
      public Builder setType(
          java.lang.String value) {
        copyOnWrite();
        instance.setType(value);
        return this;
      }
      /**
       * <pre>
       * The type of PreconditionFailure. We recommend using a service-specific
       * enum type to define the supported precondition violation types. For
       * example, "TOS" for "Terms of Service violation".
       * </pre>
       *
       * <code>optional string type = 1;</code>
       */
      public Builder clearType() {
        copyOnWrite();
        instance.clearType();
        return this;
      }
      /**
       * <pre>
       * The type of PreconditionFailure. We recommend using a service-specific
       * enum type to define the supported precondition violation types. For
       * example, "TOS" for "Terms of Service violation".
       * </pre>
       *
       * <code>optional string type = 1;</code>
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTypeBytes(value);
        return this;
      }

      /**
       * <pre>
       * The subject, relative to the type, that failed.
       * For example, "google.com/cloud" relative to the "TOS" type would
       * indicate which terms of service is being referenced.
       * </pre>
       *
       * <code>optional string subject = 2;</code>
       */
      public java.lang.String getSubject() {
        return instance.getSubject();
      }
      /**
       * <pre>
       * The subject, relative to the type, that failed.
       * For example, "google.com/cloud" relative to the "TOS" type would
       * indicate which terms of service is being referenced.
       * </pre>
       *
       * <code>optional string subject = 2;</code>
       */
      public com.google.protobuf.ByteString
          getSubjectBytes() {
        return instance.getSubjectBytes();
      }
      /**
       * <pre>
       * The subject, relative to the type, that failed.
       * For example, "google.com/cloud" relative to the "TOS" type would
       * indicate which terms of service is being referenced.
       * </pre>
       *
       * <code>optional string subject = 2;</code>
       */
      public Builder setSubject(
          java.lang.String value) {
        copyOnWrite();
        instance.setSubject(value);
        return this;
      }
      /**
       * <pre>
       * The subject, relative to the type, that failed.
       * For example, "google.com/cloud" relative to the "TOS" type would
       * indicate which terms of service is being referenced.
       * </pre>
       *
       * <code>optional string subject = 2;</code>
       */
      public Builder clearSubject() {
        copyOnWrite();
        instance.clearSubject();
        return this;
      }
      /**
       * <pre>
       * The subject, relative to the type, that failed.
       * For example, "google.com/cloud" relative to the "TOS" type would
       * indicate which terms of service is being referenced.
       * </pre>
       *
       * <code>optional string subject = 2;</code>
       */
      public Builder setSubjectBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSubjectBytes(value);
        return this;
      }

      /**
       * <pre>
       * A description of how the precondition failed. Developers can use this
       * description to understand how to fix the failure.
       * For example: "Terms of service not accepted".
       * </pre>
       *
       * <code>optional string description = 3;</code>
       */
      public java.lang.String getDescription() {
        return instance.getDescription();
      }
      /**
       * <pre>
       * A description of how the precondition failed. Developers can use this
       * description to understand how to fix the failure.
       * For example: "Terms of service not accepted".
       * </pre>
       *
       * <code>optional string description = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        return instance.getDescriptionBytes();
      }
      /**
       * <pre>
       * A description of how the precondition failed. Developers can use this
       * description to understand how to fix the failure.
       * For example: "Terms of service not accepted".
       * </pre>
       *
       * <code>optional string description = 3;</code>
       */
      public Builder setDescription(
          java.lang.String value) {
        copyOnWrite();
        instance.setDescription(value);
        return this;
      }
      /**
       * <pre>
       * A description of how the precondition failed. Developers can use this
       * description to understand how to fix the failure.
       * For example: "Terms of service not accepted".
       * </pre>
       *
       * <code>optional string description = 3;</code>
       */
      public Builder clearDescription() {
        copyOnWrite();
        instance.clearDescription();
        return this;
      }
      /**
       * <pre>
       * A description of how the precondition failed. Developers can use this
       * description to understand how to fix the failure.
       * For example: "Terms of service not accepted".
       * </pre>
       *
       * <code>optional string description = 3;</code>
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDescriptionBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.rpc.PreconditionFailure.Violation)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.rpc.PreconditionFailure.Violation();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.google.rpc.PreconditionFailure.Violation other = (com.google.rpc.PreconditionFailure.Violation) arg1;
          type_ = visitor.visitString(!type_.isEmpty(), type_,
              !other.type_.isEmpty(), other.type_);
          subject_ = visitor.visitString(!subject_.isEmpty(), subject_,
              !other.subject_.isEmpty(), other.subject_);
          description_ = visitor.visitString(!description_.isEmpty(), description_,
              !other.description_.isEmpty(), other.description_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  type_ = s;
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();

                  subject_ = s;
                  break;
                }
                case 26: {
                  String s = input.readStringRequireUtf8();

                  description_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.google.rpc.PreconditionFailure.Violation.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.rpc.PreconditionFailure.Violation)
    private static final com.google.rpc.PreconditionFailure.Violation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Violation();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.google.rpc.PreconditionFailure.Violation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Violation> PARSER;

    public static com.google.protobuf.Parser<Violation> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public static final int VIOLATIONS_FIELD_NUMBER = 1;
  private com.google.protobuf.Internal.ProtobufList<com.google.rpc.PreconditionFailure.Violation> violations_;
  /**
   * <pre>
   * Describes all precondition violations.
   * </pre>
   *
   * <code>repeated .google.rpc.PreconditionFailure.Violation violations = 1;</code>
   */
  public java.util.List<com.google.rpc.PreconditionFailure.Violation> getViolationsList() {
    return violations_;
  }
  /**
   * <pre>
   * Describes all precondition violations.
   * </pre>
   *
   * <code>repeated .google.rpc.PreconditionFailure.Violation violations = 1;</code>
   */
  public java.util.List<? extends com.google.rpc.PreconditionFailure.ViolationOrBuilder> 
      getViolationsOrBuilderList() {
    return violations_;
  }
  /**
   * <pre>
   * Describes all precondition violations.
   * </pre>
   *
   * <code>repeated .google.rpc.PreconditionFailure.Violation violations = 1;</code>
   */
  public int getViolationsCount() {
    return violations_.size();
  }
  /**
   * <pre>
   * Describes all precondition violations.
   * </pre>
   *
   * <code>repeated .google.rpc.PreconditionFailure.Violation violations = 1;</code>
   */
  public com.google.rpc.PreconditionFailure.Violation getViolations(int index) {
    return violations_.get(index);
  }
  /**
   * <pre>
   * Describes all precondition violations.
   * </pre>
   *
   * <code>repeated .google.rpc.PreconditionFailure.Violation violations = 1;</code>
   */
  public com.google.rpc.PreconditionFailure.ViolationOrBuilder getViolationsOrBuilder(
      int index) {
    return violations_.get(index);
  }
  private void ensureViolationsIsMutable() {
    if (!violations_.isModifiable()) {
      violations_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(violations_);
     }
  }

  /**
   * <pre>
   * Describes all precondition violations.
   * </pre>
   *
   * <code>repeated .google.rpc.PreconditionFailure.Violation violations = 1;</code>
   */
  private void setViolations(
      int index, com.google.rpc.PreconditionFailure.Violation value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureViolationsIsMutable();
    violations_.set(index, value);
  }
  /**
   * <pre>
   * Describes all precondition violations.
   * </pre>
   *
   * <code>repeated .google.rpc.PreconditionFailure.Violation violations = 1;</code>
   */
  private void setViolations(
      int index, com.google.rpc.PreconditionFailure.Violation.Builder builderForValue) {
    ensureViolationsIsMutable();
    violations_.set(index, builderForValue.build());
  }
  /**
   * <pre>
   * Describes all precondition violations.
   * </pre>
   *
   * <code>repeated .google.rpc.PreconditionFailure.Violation violations = 1;</code>
   */
  private void addViolations(com.google.rpc.PreconditionFailure.Violation value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureViolationsIsMutable();
    violations_.add(value);
  }
  /**
   * <pre>
   * Describes all precondition violations.
   * </pre>
   *
   * <code>repeated .google.rpc.PreconditionFailure.Violation violations = 1;</code>
   */
  private void addViolations(
      int index, com.google.rpc.PreconditionFailure.Violation value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureViolationsIsMutable();
    violations_.add(index, value);
  }
  /**
   * <pre>
   * Describes all precondition violations.
   * </pre>
   *
   * <code>repeated .google.rpc.PreconditionFailure.Violation violations = 1;</code>
   */
  private void addViolations(
      com.google.rpc.PreconditionFailure.Violation.Builder builderForValue) {
    ensureViolationsIsMutable();
    violations_.add(builderForValue.build());
  }
  /**
   * <pre>
   * Describes all precondition violations.
   * </pre>
   *
   * <code>repeated .google.rpc.PreconditionFailure.Violation violations = 1;</code>
   */
  private void addViolations(
      int index, com.google.rpc.PreconditionFailure.Violation.Builder builderForValue) {
    ensureViolationsIsMutable();
    violations_.add(index, builderForValue.build());
  }
  /**
   * <pre>
   * Describes all precondition violations.
   * </pre>
   *
   * <code>repeated .google.rpc.PreconditionFailure.Violation violations = 1;</code>
   */
  private void addAllViolations(
      java.lang.Iterable<? extends com.google.rpc.PreconditionFailure.Violation> values) {
    ensureViolationsIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, violations_);
  }
  /**
   * <pre>
   * Describes all precondition violations.
   * </pre>
   *
   * <code>repeated .google.rpc.PreconditionFailure.Violation violations = 1;</code>
   */
  private void clearViolations() {
    violations_ = emptyProtobufList();
  }
  /**
   * <pre>
   * Describes all precondition violations.
   * </pre>
   *
   * <code>repeated .google.rpc.PreconditionFailure.Violation violations = 1;</code>
   */
  private void removeViolations(int index) {
    ensureViolationsIsMutable();
    violations_.remove(index);
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < violations_.size(); i++) {
      output.writeMessage(1, violations_.get(i));
    }
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < violations_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, violations_.get(i));
    }
    memoizedSerializedSize = size;
    return size;
  }

  public static com.google.rpc.PreconditionFailure parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.rpc.PreconditionFailure parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.rpc.PreconditionFailure parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.rpc.PreconditionFailure parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.rpc.PreconditionFailure parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.rpc.PreconditionFailure parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.rpc.PreconditionFailure parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.google.rpc.PreconditionFailure parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.rpc.PreconditionFailure parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.rpc.PreconditionFailure parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.rpc.PreconditionFailure prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * Describes what preconditions have failed.
   * For example, if an RPC failed because it required the Terms of Service to be
   * acknowledged, it could list the terms of service violation in the
   * PreconditionFailure message.
   * </pre>
   *
   * Protobuf type {@code google.rpc.PreconditionFailure}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.google.rpc.PreconditionFailure, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.rpc.PreconditionFailure)
      com.google.rpc.PreconditionFailureOrBuilder {
    // Construct using com.google.rpc.PreconditionFailure.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Describes all precondition violations.
     * </pre>
     *
     * <code>repeated .google.rpc.PreconditionFailure.Violation violations = 1;</code>
     */
    public java.util.List<com.google.rpc.PreconditionFailure.Violation> getViolationsList() {
      return java.util.Collections.unmodifiableList(
          instance.getViolationsList());
    }
    /**
     * <pre>
     * Describes all precondition violations.
     * </pre>
     *
     * <code>repeated .google.rpc.PreconditionFailure.Violation violations = 1;</code>
     */
    public int getViolationsCount() {
      return instance.getViolationsCount();
    }/**
     * <pre>
     * Describes all precondition violations.
     * </pre>
     *
     * <code>repeated .google.rpc.PreconditionFailure.Violation violations = 1;</code>
     */
    public com.google.rpc.PreconditionFailure.Violation getViolations(int index) {
      return instance.getViolations(index);
    }
    /**
     * <pre>
     * Describes all precondition violations.
     * </pre>
     *
     * <code>repeated .google.rpc.PreconditionFailure.Violation violations = 1;</code>
     */
    public Builder setViolations(
        int index, com.google.rpc.PreconditionFailure.Violation value) {
      copyOnWrite();
      instance.setViolations(index, value);
      return this;
    }
    /**
     * <pre>
     * Describes all precondition violations.
     * </pre>
     *
     * <code>repeated .google.rpc.PreconditionFailure.Violation violations = 1;</code>
     */
    public Builder setViolations(
        int index, com.google.rpc.PreconditionFailure.Violation.Builder builderForValue) {
      copyOnWrite();
      instance.setViolations(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * Describes all precondition violations.
     * </pre>
     *
     * <code>repeated .google.rpc.PreconditionFailure.Violation violations = 1;</code>
     */
    public Builder addViolations(com.google.rpc.PreconditionFailure.Violation value) {
      copyOnWrite();
      instance.addViolations(value);
      return this;
    }
    /**
     * <pre>
     * Describes all precondition violations.
     * </pre>
     *
     * <code>repeated .google.rpc.PreconditionFailure.Violation violations = 1;</code>
     */
    public Builder addViolations(
        int index, com.google.rpc.PreconditionFailure.Violation value) {
      copyOnWrite();
      instance.addViolations(index, value);
      return this;
    }
    /**
     * <pre>
     * Describes all precondition violations.
     * </pre>
     *
     * <code>repeated .google.rpc.PreconditionFailure.Violation violations = 1;</code>
     */
    public Builder addViolations(
        com.google.rpc.PreconditionFailure.Violation.Builder builderForValue) {
      copyOnWrite();
      instance.addViolations(builderForValue);
      return this;
    }
    /**
     * <pre>
     * Describes all precondition violations.
     * </pre>
     *
     * <code>repeated .google.rpc.PreconditionFailure.Violation violations = 1;</code>
     */
    public Builder addViolations(
        int index, com.google.rpc.PreconditionFailure.Violation.Builder builderForValue) {
      copyOnWrite();
      instance.addViolations(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * Describes all precondition violations.
     * </pre>
     *
     * <code>repeated .google.rpc.PreconditionFailure.Violation violations = 1;</code>
     */
    public Builder addAllViolations(
        java.lang.Iterable<? extends com.google.rpc.PreconditionFailure.Violation> values) {
      copyOnWrite();
      instance.addAllViolations(values);
      return this;
    }
    /**
     * <pre>
     * Describes all precondition violations.
     * </pre>
     *
     * <code>repeated .google.rpc.PreconditionFailure.Violation violations = 1;</code>
     */
    public Builder clearViolations() {
      copyOnWrite();
      instance.clearViolations();
      return this;
    }
    /**
     * <pre>
     * Describes all precondition violations.
     * </pre>
     *
     * <code>repeated .google.rpc.PreconditionFailure.Violation violations = 1;</code>
     */
    public Builder removeViolations(int index) {
      copyOnWrite();
      instance.removeViolations(index);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.rpc.PreconditionFailure)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.google.rpc.PreconditionFailure();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        violations_.makeImmutable();
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        com.google.rpc.PreconditionFailure other = (com.google.rpc.PreconditionFailure) arg1;
        violations_= visitor.visitList(violations_, other.violations_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                if (!violations_.isModifiable()) {
                  violations_ =
                      com.google.protobuf.GeneratedMessageLite.mutableCopy(violations_);
                }
                violations_.add(
                    input.readMessage(com.google.rpc.PreconditionFailure.Violation.parser(), extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (com.google.rpc.PreconditionFailure.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.rpc.PreconditionFailure)
  private static final com.google.rpc.PreconditionFailure DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new PreconditionFailure();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static com.google.rpc.PreconditionFailure getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<PreconditionFailure> PARSER;

  public static com.google.protobuf.Parser<PreconditionFailure> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

