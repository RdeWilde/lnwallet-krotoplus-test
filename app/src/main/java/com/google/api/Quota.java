// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/quota.proto

package com.google.api;

/**
 * <pre>
 * Quota configuration helps to achieve fairness and budgeting in service
 * usage.
 * The quota configuration works this way:
 * - The service configuration defines a set of metrics.
 * - For API calls, the quota.metric_rules maps methods to metrics with
 *   corresponding costs.
 * - The quota.limits defines limits on the metrics, which will be used for
 *   quota checks at runtime.
 * An example quota configuration in yaml format:
 *    quota:
 *      limits:
 *      - name: apiWriteQpsPerProject
 *        metric: library.googleapis.com/write_calls
 *        unit: "1/min/{project}"  # rate limit for consumer projects
 *        values:
 *          STANDARD: 10000
 *      # The metric rules bind all methods to the read_calls metric,
 *      # except for the UpdateBook and DeleteBook methods. These two methods
 *      # are mapped to the write_calls metric, with the UpdateBook method
 *      # consuming at twice rate as the DeleteBook method.
 *      metric_rules:
 *      - selector: "*"
 *        metric_costs:
 *          library.googleapis.com/read_calls: 1
 *      - selector: google.example.library.v1.LibraryService.UpdateBook
 *        metric_costs:
 *          library.googleapis.com/write_calls: 2
 *      - selector: google.example.library.v1.LibraryService.DeleteBook
 *        metric_costs:
 *          library.googleapis.com/write_calls: 1
 *  Corresponding Metric definition:
 *      metrics:
 *      - name: library.googleapis.com/read_calls
 *        display_name: Read requests
 *        metric_kind: DELTA
 *        value_type: INT64
 *      - name: library.googleapis.com/write_calls
 *        display_name: Write requests
 *        metric_kind: DELTA
 *        value_type: INT64
 * </pre>
 *
 * Protobuf type {@code google.api.Quota}
 */
public  final class Quota extends
    com.google.protobuf.GeneratedMessageLite<
        Quota, Quota.Builder> implements
    // @@protoc_insertion_point(message_implements:google.api.Quota)
    QuotaOrBuilder {
  private Quota() {
    limits_ = emptyProtobufList();
    metricRules_ = emptyProtobufList();
  }
  public static final int LIMITS_FIELD_NUMBER = 3;
  private com.google.protobuf.Internal.ProtobufList<com.google.api.QuotaLimit> limits_;
  /**
   * <pre>
   * List of `QuotaLimit` definitions for the service.
   * Used by metric-based quotas only.
   * </pre>
   *
   * <code>repeated .google.api.QuotaLimit limits = 3;</code>
   */
  public java.util.List<com.google.api.QuotaLimit> getLimitsList() {
    return limits_;
  }
  /**
   * <pre>
   * List of `QuotaLimit` definitions for the service.
   * Used by metric-based quotas only.
   * </pre>
   *
   * <code>repeated .google.api.QuotaLimit limits = 3;</code>
   */
  public java.util.List<? extends com.google.api.QuotaLimitOrBuilder> 
      getLimitsOrBuilderList() {
    return limits_;
  }
  /**
   * <pre>
   * List of `QuotaLimit` definitions for the service.
   * Used by metric-based quotas only.
   * </pre>
   *
   * <code>repeated .google.api.QuotaLimit limits = 3;</code>
   */
  public int getLimitsCount() {
    return limits_.size();
  }
  /**
   * <pre>
   * List of `QuotaLimit` definitions for the service.
   * Used by metric-based quotas only.
   * </pre>
   *
   * <code>repeated .google.api.QuotaLimit limits = 3;</code>
   */
  public com.google.api.QuotaLimit getLimits(int index) {
    return limits_.get(index);
  }
  /**
   * <pre>
   * List of `QuotaLimit` definitions for the service.
   * Used by metric-based quotas only.
   * </pre>
   *
   * <code>repeated .google.api.QuotaLimit limits = 3;</code>
   */
  public com.google.api.QuotaLimitOrBuilder getLimitsOrBuilder(
      int index) {
    return limits_.get(index);
  }
  private void ensureLimitsIsMutable() {
    if (!limits_.isModifiable()) {
      limits_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(limits_);
     }
  }

  /**
   * <pre>
   * List of `QuotaLimit` definitions for the service.
   * Used by metric-based quotas only.
   * </pre>
   *
   * <code>repeated .google.api.QuotaLimit limits = 3;</code>
   */
  private void setLimits(
      int index, com.google.api.QuotaLimit value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureLimitsIsMutable();
    limits_.set(index, value);
  }
  /**
   * <pre>
   * List of `QuotaLimit` definitions for the service.
   * Used by metric-based quotas only.
   * </pre>
   *
   * <code>repeated .google.api.QuotaLimit limits = 3;</code>
   */
  private void setLimits(
      int index, com.google.api.QuotaLimit.Builder builderForValue) {
    ensureLimitsIsMutable();
    limits_.set(index, builderForValue.build());
  }
  /**
   * <pre>
   * List of `QuotaLimit` definitions for the service.
   * Used by metric-based quotas only.
   * </pre>
   *
   * <code>repeated .google.api.QuotaLimit limits = 3;</code>
   */
  private void addLimits(com.google.api.QuotaLimit value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureLimitsIsMutable();
    limits_.add(value);
  }
  /**
   * <pre>
   * List of `QuotaLimit` definitions for the service.
   * Used by metric-based quotas only.
   * </pre>
   *
   * <code>repeated .google.api.QuotaLimit limits = 3;</code>
   */
  private void addLimits(
      int index, com.google.api.QuotaLimit value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureLimitsIsMutable();
    limits_.add(index, value);
  }
  /**
   * <pre>
   * List of `QuotaLimit` definitions for the service.
   * Used by metric-based quotas only.
   * </pre>
   *
   * <code>repeated .google.api.QuotaLimit limits = 3;</code>
   */
  private void addLimits(
      com.google.api.QuotaLimit.Builder builderForValue) {
    ensureLimitsIsMutable();
    limits_.add(builderForValue.build());
  }
  /**
   * <pre>
   * List of `QuotaLimit` definitions for the service.
   * Used by metric-based quotas only.
   * </pre>
   *
   * <code>repeated .google.api.QuotaLimit limits = 3;</code>
   */
  private void addLimits(
      int index, com.google.api.QuotaLimit.Builder builderForValue) {
    ensureLimitsIsMutable();
    limits_.add(index, builderForValue.build());
  }
  /**
   * <pre>
   * List of `QuotaLimit` definitions for the service.
   * Used by metric-based quotas only.
   * </pre>
   *
   * <code>repeated .google.api.QuotaLimit limits = 3;</code>
   */
  private void addAllLimits(
      java.lang.Iterable<? extends com.google.api.QuotaLimit> values) {
    ensureLimitsIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, limits_);
  }
  /**
   * <pre>
   * List of `QuotaLimit` definitions for the service.
   * Used by metric-based quotas only.
   * </pre>
   *
   * <code>repeated .google.api.QuotaLimit limits = 3;</code>
   */
  private void clearLimits() {
    limits_ = emptyProtobufList();
  }
  /**
   * <pre>
   * List of `QuotaLimit` definitions for the service.
   * Used by metric-based quotas only.
   * </pre>
   *
   * <code>repeated .google.api.QuotaLimit limits = 3;</code>
   */
  private void removeLimits(int index) {
    ensureLimitsIsMutable();
    limits_.remove(index);
  }

  public static final int METRIC_RULES_FIELD_NUMBER = 4;
  private com.google.protobuf.Internal.ProtobufList<com.google.api.MetricRule> metricRules_;
  /**
   * <pre>
   * List of `MetricRule` definitions, each one mapping a selected method to one
   * or more metrics.
   * Used by metric-based quotas only.
   * </pre>
   *
   * <code>repeated .google.api.MetricRule metric_rules = 4;</code>
   */
  public java.util.List<com.google.api.MetricRule> getMetricRulesList() {
    return metricRules_;
  }
  /**
   * <pre>
   * List of `MetricRule` definitions, each one mapping a selected method to one
   * or more metrics.
   * Used by metric-based quotas only.
   * </pre>
   *
   * <code>repeated .google.api.MetricRule metric_rules = 4;</code>
   */
  public java.util.List<? extends com.google.api.MetricRuleOrBuilder> 
      getMetricRulesOrBuilderList() {
    return metricRules_;
  }
  /**
   * <pre>
   * List of `MetricRule` definitions, each one mapping a selected method to one
   * or more metrics.
   * Used by metric-based quotas only.
   * </pre>
   *
   * <code>repeated .google.api.MetricRule metric_rules = 4;</code>
   */
  public int getMetricRulesCount() {
    return metricRules_.size();
  }
  /**
   * <pre>
   * List of `MetricRule` definitions, each one mapping a selected method to one
   * or more metrics.
   * Used by metric-based quotas only.
   * </pre>
   *
   * <code>repeated .google.api.MetricRule metric_rules = 4;</code>
   */
  public com.google.api.MetricRule getMetricRules(int index) {
    return metricRules_.get(index);
  }
  /**
   * <pre>
   * List of `MetricRule` definitions, each one mapping a selected method to one
   * or more metrics.
   * Used by metric-based quotas only.
   * </pre>
   *
   * <code>repeated .google.api.MetricRule metric_rules = 4;</code>
   */
  public com.google.api.MetricRuleOrBuilder getMetricRulesOrBuilder(
      int index) {
    return metricRules_.get(index);
  }
  private void ensureMetricRulesIsMutable() {
    if (!metricRules_.isModifiable()) {
      metricRules_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(metricRules_);
     }
  }

  /**
   * <pre>
   * List of `MetricRule` definitions, each one mapping a selected method to one
   * or more metrics.
   * Used by metric-based quotas only.
   * </pre>
   *
   * <code>repeated .google.api.MetricRule metric_rules = 4;</code>
   */
  private void setMetricRules(
      int index, com.google.api.MetricRule value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureMetricRulesIsMutable();
    metricRules_.set(index, value);
  }
  /**
   * <pre>
   * List of `MetricRule` definitions, each one mapping a selected method to one
   * or more metrics.
   * Used by metric-based quotas only.
   * </pre>
   *
   * <code>repeated .google.api.MetricRule metric_rules = 4;</code>
   */
  private void setMetricRules(
      int index, com.google.api.MetricRule.Builder builderForValue) {
    ensureMetricRulesIsMutable();
    metricRules_.set(index, builderForValue.build());
  }
  /**
   * <pre>
   * List of `MetricRule` definitions, each one mapping a selected method to one
   * or more metrics.
   * Used by metric-based quotas only.
   * </pre>
   *
   * <code>repeated .google.api.MetricRule metric_rules = 4;</code>
   */
  private void addMetricRules(com.google.api.MetricRule value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureMetricRulesIsMutable();
    metricRules_.add(value);
  }
  /**
   * <pre>
   * List of `MetricRule` definitions, each one mapping a selected method to one
   * or more metrics.
   * Used by metric-based quotas only.
   * </pre>
   *
   * <code>repeated .google.api.MetricRule metric_rules = 4;</code>
   */
  private void addMetricRules(
      int index, com.google.api.MetricRule value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureMetricRulesIsMutable();
    metricRules_.add(index, value);
  }
  /**
   * <pre>
   * List of `MetricRule` definitions, each one mapping a selected method to one
   * or more metrics.
   * Used by metric-based quotas only.
   * </pre>
   *
   * <code>repeated .google.api.MetricRule metric_rules = 4;</code>
   */
  private void addMetricRules(
      com.google.api.MetricRule.Builder builderForValue) {
    ensureMetricRulesIsMutable();
    metricRules_.add(builderForValue.build());
  }
  /**
   * <pre>
   * List of `MetricRule` definitions, each one mapping a selected method to one
   * or more metrics.
   * Used by metric-based quotas only.
   * </pre>
   *
   * <code>repeated .google.api.MetricRule metric_rules = 4;</code>
   */
  private void addMetricRules(
      int index, com.google.api.MetricRule.Builder builderForValue) {
    ensureMetricRulesIsMutable();
    metricRules_.add(index, builderForValue.build());
  }
  /**
   * <pre>
   * List of `MetricRule` definitions, each one mapping a selected method to one
   * or more metrics.
   * Used by metric-based quotas only.
   * </pre>
   *
   * <code>repeated .google.api.MetricRule metric_rules = 4;</code>
   */
  private void addAllMetricRules(
      java.lang.Iterable<? extends com.google.api.MetricRule> values) {
    ensureMetricRulesIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, metricRules_);
  }
  /**
   * <pre>
   * List of `MetricRule` definitions, each one mapping a selected method to one
   * or more metrics.
   * Used by metric-based quotas only.
   * </pre>
   *
   * <code>repeated .google.api.MetricRule metric_rules = 4;</code>
   */
  private void clearMetricRules() {
    metricRules_ = emptyProtobufList();
  }
  /**
   * <pre>
   * List of `MetricRule` definitions, each one mapping a selected method to one
   * or more metrics.
   * Used by metric-based quotas only.
   * </pre>
   *
   * <code>repeated .google.api.MetricRule metric_rules = 4;</code>
   */
  private void removeMetricRules(int index) {
    ensureMetricRulesIsMutable();
    metricRules_.remove(index);
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < limits_.size(); i++) {
      output.writeMessage(3, limits_.get(i));
    }
    for (int i = 0; i < metricRules_.size(); i++) {
      output.writeMessage(4, metricRules_.get(i));
    }
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < limits_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, limits_.get(i));
    }
    for (int i = 0; i < metricRules_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, metricRules_.get(i));
    }
    memoizedSerializedSize = size;
    return size;
  }

  public static com.google.api.Quota parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.api.Quota parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.api.Quota parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.api.Quota parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.api.Quota parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.api.Quota parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.api.Quota parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.google.api.Quota parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.api.Quota parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.api.Quota parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.api.Quota prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * Quota configuration helps to achieve fairness and budgeting in service
   * usage.
   * The quota configuration works this way:
   * - The service configuration defines a set of metrics.
   * - For API calls, the quota.metric_rules maps methods to metrics with
   *   corresponding costs.
   * - The quota.limits defines limits on the metrics, which will be used for
   *   quota checks at runtime.
   * An example quota configuration in yaml format:
   *    quota:
   *      limits:
   *      - name: apiWriteQpsPerProject
   *        metric: library.googleapis.com/write_calls
   *        unit: "1/min/{project}"  # rate limit for consumer projects
   *        values:
   *          STANDARD: 10000
   *      # The metric rules bind all methods to the read_calls metric,
   *      # except for the UpdateBook and DeleteBook methods. These two methods
   *      # are mapped to the write_calls metric, with the UpdateBook method
   *      # consuming at twice rate as the DeleteBook method.
   *      metric_rules:
   *      - selector: "*"
   *        metric_costs:
   *          library.googleapis.com/read_calls: 1
   *      - selector: google.example.library.v1.LibraryService.UpdateBook
   *        metric_costs:
   *          library.googleapis.com/write_calls: 2
   *      - selector: google.example.library.v1.LibraryService.DeleteBook
   *        metric_costs:
   *          library.googleapis.com/write_calls: 1
   *  Corresponding Metric definition:
   *      metrics:
   *      - name: library.googleapis.com/read_calls
   *        display_name: Read requests
   *        metric_kind: DELTA
   *        value_type: INT64
   *      - name: library.googleapis.com/write_calls
   *        display_name: Write requests
   *        metric_kind: DELTA
   *        value_type: INT64
   * </pre>
   *
   * Protobuf type {@code google.api.Quota}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.google.api.Quota, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.api.Quota)
      com.google.api.QuotaOrBuilder {
    // Construct using com.google.api.Quota.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * List of `QuotaLimit` definitions for the service.
     * Used by metric-based quotas only.
     * </pre>
     *
     * <code>repeated .google.api.QuotaLimit limits = 3;</code>
     */
    public java.util.List<com.google.api.QuotaLimit> getLimitsList() {
      return java.util.Collections.unmodifiableList(
          instance.getLimitsList());
    }
    /**
     * <pre>
     * List of `QuotaLimit` definitions for the service.
     * Used by metric-based quotas only.
     * </pre>
     *
     * <code>repeated .google.api.QuotaLimit limits = 3;</code>
     */
    public int getLimitsCount() {
      return instance.getLimitsCount();
    }/**
     * <pre>
     * List of `QuotaLimit` definitions for the service.
     * Used by metric-based quotas only.
     * </pre>
     *
     * <code>repeated .google.api.QuotaLimit limits = 3;</code>
     */
    public com.google.api.QuotaLimit getLimits(int index) {
      return instance.getLimits(index);
    }
    /**
     * <pre>
     * List of `QuotaLimit` definitions for the service.
     * Used by metric-based quotas only.
     * </pre>
     *
     * <code>repeated .google.api.QuotaLimit limits = 3;</code>
     */
    public Builder setLimits(
        int index, com.google.api.QuotaLimit value) {
      copyOnWrite();
      instance.setLimits(index, value);
      return this;
    }
    /**
     * <pre>
     * List of `QuotaLimit` definitions for the service.
     * Used by metric-based quotas only.
     * </pre>
     *
     * <code>repeated .google.api.QuotaLimit limits = 3;</code>
     */
    public Builder setLimits(
        int index, com.google.api.QuotaLimit.Builder builderForValue) {
      copyOnWrite();
      instance.setLimits(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * List of `QuotaLimit` definitions for the service.
     * Used by metric-based quotas only.
     * </pre>
     *
     * <code>repeated .google.api.QuotaLimit limits = 3;</code>
     */
    public Builder addLimits(com.google.api.QuotaLimit value) {
      copyOnWrite();
      instance.addLimits(value);
      return this;
    }
    /**
     * <pre>
     * List of `QuotaLimit` definitions for the service.
     * Used by metric-based quotas only.
     * </pre>
     *
     * <code>repeated .google.api.QuotaLimit limits = 3;</code>
     */
    public Builder addLimits(
        int index, com.google.api.QuotaLimit value) {
      copyOnWrite();
      instance.addLimits(index, value);
      return this;
    }
    /**
     * <pre>
     * List of `QuotaLimit` definitions for the service.
     * Used by metric-based quotas only.
     * </pre>
     *
     * <code>repeated .google.api.QuotaLimit limits = 3;</code>
     */
    public Builder addLimits(
        com.google.api.QuotaLimit.Builder builderForValue) {
      copyOnWrite();
      instance.addLimits(builderForValue);
      return this;
    }
    /**
     * <pre>
     * List of `QuotaLimit` definitions for the service.
     * Used by metric-based quotas only.
     * </pre>
     *
     * <code>repeated .google.api.QuotaLimit limits = 3;</code>
     */
    public Builder addLimits(
        int index, com.google.api.QuotaLimit.Builder builderForValue) {
      copyOnWrite();
      instance.addLimits(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * List of `QuotaLimit` definitions for the service.
     * Used by metric-based quotas only.
     * </pre>
     *
     * <code>repeated .google.api.QuotaLimit limits = 3;</code>
     */
    public Builder addAllLimits(
        java.lang.Iterable<? extends com.google.api.QuotaLimit> values) {
      copyOnWrite();
      instance.addAllLimits(values);
      return this;
    }
    /**
     * <pre>
     * List of `QuotaLimit` definitions for the service.
     * Used by metric-based quotas only.
     * </pre>
     *
     * <code>repeated .google.api.QuotaLimit limits = 3;</code>
     */
    public Builder clearLimits() {
      copyOnWrite();
      instance.clearLimits();
      return this;
    }
    /**
     * <pre>
     * List of `QuotaLimit` definitions for the service.
     * Used by metric-based quotas only.
     * </pre>
     *
     * <code>repeated .google.api.QuotaLimit limits = 3;</code>
     */
    public Builder removeLimits(int index) {
      copyOnWrite();
      instance.removeLimits(index);
      return this;
    }

    /**
     * <pre>
     * List of `MetricRule` definitions, each one mapping a selected method to one
     * or more metrics.
     * Used by metric-based quotas only.
     * </pre>
     *
     * <code>repeated .google.api.MetricRule metric_rules = 4;</code>
     */
    public java.util.List<com.google.api.MetricRule> getMetricRulesList() {
      return java.util.Collections.unmodifiableList(
          instance.getMetricRulesList());
    }
    /**
     * <pre>
     * List of `MetricRule` definitions, each one mapping a selected method to one
     * or more metrics.
     * Used by metric-based quotas only.
     * </pre>
     *
     * <code>repeated .google.api.MetricRule metric_rules = 4;</code>
     */
    public int getMetricRulesCount() {
      return instance.getMetricRulesCount();
    }/**
     * <pre>
     * List of `MetricRule` definitions, each one mapping a selected method to one
     * or more metrics.
     * Used by metric-based quotas only.
     * </pre>
     *
     * <code>repeated .google.api.MetricRule metric_rules = 4;</code>
     */
    public com.google.api.MetricRule getMetricRules(int index) {
      return instance.getMetricRules(index);
    }
    /**
     * <pre>
     * List of `MetricRule` definitions, each one mapping a selected method to one
     * or more metrics.
     * Used by metric-based quotas only.
     * </pre>
     *
     * <code>repeated .google.api.MetricRule metric_rules = 4;</code>
     */
    public Builder setMetricRules(
        int index, com.google.api.MetricRule value) {
      copyOnWrite();
      instance.setMetricRules(index, value);
      return this;
    }
    /**
     * <pre>
     * List of `MetricRule` definitions, each one mapping a selected method to one
     * or more metrics.
     * Used by metric-based quotas only.
     * </pre>
     *
     * <code>repeated .google.api.MetricRule metric_rules = 4;</code>
     */
    public Builder setMetricRules(
        int index, com.google.api.MetricRule.Builder builderForValue) {
      copyOnWrite();
      instance.setMetricRules(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * List of `MetricRule` definitions, each one mapping a selected method to one
     * or more metrics.
     * Used by metric-based quotas only.
     * </pre>
     *
     * <code>repeated .google.api.MetricRule metric_rules = 4;</code>
     */
    public Builder addMetricRules(com.google.api.MetricRule value) {
      copyOnWrite();
      instance.addMetricRules(value);
      return this;
    }
    /**
     * <pre>
     * List of `MetricRule` definitions, each one mapping a selected method to one
     * or more metrics.
     * Used by metric-based quotas only.
     * </pre>
     *
     * <code>repeated .google.api.MetricRule metric_rules = 4;</code>
     */
    public Builder addMetricRules(
        int index, com.google.api.MetricRule value) {
      copyOnWrite();
      instance.addMetricRules(index, value);
      return this;
    }
    /**
     * <pre>
     * List of `MetricRule` definitions, each one mapping a selected method to one
     * or more metrics.
     * Used by metric-based quotas only.
     * </pre>
     *
     * <code>repeated .google.api.MetricRule metric_rules = 4;</code>
     */
    public Builder addMetricRules(
        com.google.api.MetricRule.Builder builderForValue) {
      copyOnWrite();
      instance.addMetricRules(builderForValue);
      return this;
    }
    /**
     * <pre>
     * List of `MetricRule` definitions, each one mapping a selected method to one
     * or more metrics.
     * Used by metric-based quotas only.
     * </pre>
     *
     * <code>repeated .google.api.MetricRule metric_rules = 4;</code>
     */
    public Builder addMetricRules(
        int index, com.google.api.MetricRule.Builder builderForValue) {
      copyOnWrite();
      instance.addMetricRules(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * List of `MetricRule` definitions, each one mapping a selected method to one
     * or more metrics.
     * Used by metric-based quotas only.
     * </pre>
     *
     * <code>repeated .google.api.MetricRule metric_rules = 4;</code>
     */
    public Builder addAllMetricRules(
        java.lang.Iterable<? extends com.google.api.MetricRule> values) {
      copyOnWrite();
      instance.addAllMetricRules(values);
      return this;
    }
    /**
     * <pre>
     * List of `MetricRule` definitions, each one mapping a selected method to one
     * or more metrics.
     * Used by metric-based quotas only.
     * </pre>
     *
     * <code>repeated .google.api.MetricRule metric_rules = 4;</code>
     */
    public Builder clearMetricRules() {
      copyOnWrite();
      instance.clearMetricRules();
      return this;
    }
    /**
     * <pre>
     * List of `MetricRule` definitions, each one mapping a selected method to one
     * or more metrics.
     * Used by metric-based quotas only.
     * </pre>
     *
     * <code>repeated .google.api.MetricRule metric_rules = 4;</code>
     */
    public Builder removeMetricRules(int index) {
      copyOnWrite();
      instance.removeMetricRules(index);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.api.Quota)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.google.api.Quota();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        limits_.makeImmutable();
        metricRules_.makeImmutable();
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        com.google.api.Quota other = (com.google.api.Quota) arg1;
        limits_= visitor.visitList(limits_, other.limits_);
        metricRules_= visitor.visitList(metricRules_, other.metricRules_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 26: {
                if (!limits_.isModifiable()) {
                  limits_ =
                      com.google.protobuf.GeneratedMessageLite.mutableCopy(limits_);
                }
                limits_.add(
                    input.readMessage(com.google.api.QuotaLimit.parser(), extensionRegistry));
                break;
              }
              case 34: {
                if (!metricRules_.isModifiable()) {
                  metricRules_ =
                      com.google.protobuf.GeneratedMessageLite.mutableCopy(metricRules_);
                }
                metricRules_.add(
                    input.readMessage(com.google.api.MetricRule.parser(), extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (com.google.api.Quota.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.api.Quota)
  private static final com.google.api.Quota DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new Quota();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static com.google.api.Quota getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<Quota> PARSER;

  public static com.google.protobuf.Parser<Quota> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

